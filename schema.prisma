// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @unique @default("")
  email     String    @unique @default("")
  password  String
  race      Race?     @relation("User_race", fields: [raceId], references: [id])
  raceId    String?   @map("race")
  coins     Int?      @default(16)
  adminRole String?   @default("")
  userRole  String?   @default("")
  posts     Post[]    @relation("Post_author")
  comments  Comment[] @relation("Comment_author")
  createdAt DateTime? @default(now())

  @@index([raceId])
}

model Post {
  id        String    @id @default(cuid())
  title     String    @unique @default("")
  content   Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author    User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId  String?   @map("author")
  state     String?   @default("Draft")
  comments  Comment[] @relation("Post_comments")
  tags      Tag[]     @relation("Post_tags")
  createdAt DateTime? @default(now())

  @@index([authorId])
}

model Comment {
  id                 String    @id @default(cuid())
  name               String    @default("")
  content            Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author             User?     @relation("Comment_author", fields: [authorId], references: [id])
  authorId           String?   @map("author")
  isDeleted          Boolean   @default(false)
  createdAt          DateTime? @default(now())
  from_Post_comments Post[]    @relation("Post_comments")

  @@index([authorId])
}

model Race {
  id              String  @id @default(cuid())
  name            String  @unique @default("")
  races           String  @default("") @map("race")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  from_User_race  User[]  @relation("User_race")
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Log {
  id   String    @id @default(cuid())
  who  String    @default("")
  what Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  when DateTime? @default(now())
}

model Poll {
  id                      String    @id @default(cuid())
  title                   String    @default("")
  optionsWithVotesAtStart Json?
  optionsWithVotesAtEnd   Json?
  dueDate                 String    @default("")
  createdAt               DateTime? @default(now())
}
